<element xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:zenta="http://magwas.rulez.org/zenta"
         xsi:type="zenta:BasicObject"
         name="Have its folder with view in 7. Low Level Design, containing it. its test artifacts, supported Business Objects and their type"
         id="bace4199-1f09-47f6-91ad-d374b6acecbc"
         ancestor="bb3cdf1a-0bc1-4772-8913-d0567ef7ab1f">
   <documentation>data_structures|
if(
	$element/..[
		contains(@name,' (design)') and
		(
        	contains(@name, tokenize($element/@name,'TestData')[1]) or
             contains(@name, tokenize(zenta:neighbours($doc,$element,'aggregates,1')/@name,'TestData')[1])
         ) and
		ancestor::folder[@name='7. Low Level Design'] and
       ../@name=zenta:neighbours($doc,$element,'contains,2')/@name
	]/element[@name=../@name]//@zentaElement=$element/@id
)
then for $artifact in (
		zenta:neighbours($doc,$element,'contains,1'),
		zenta:neighbours($doc,$element,'has an example as/is an example of,2'),
		zenta:neighbours($doc,$element,'contains,1;has an example as/is an example of,2;is a/is the type of,1'),
		zenta:neighbours($doc,$element,'contains,1;has an example as/is an example of,2')
	)
	return if ($element/../element[@name=../@name]//@zentaElement = $artifact/@id)
		then ()
		else concat(' not in the view: ',$artifact/@name,'; ') 
else concat('folderr: ',string-join($element/ancestor::folder/@name,'/'))
</documentation>
</element>
